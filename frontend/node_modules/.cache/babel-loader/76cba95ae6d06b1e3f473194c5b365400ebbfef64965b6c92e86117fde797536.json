{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:8000/api';// Create axios instance with default config\nconst apiClient=axios.create({baseURL:API_BASE_URL,timeout:10000,headers:{'Content-Type':'application/json','Accept':'application/json'}});// Add request interceptor for auth token\napiClient.interceptors.request.use(config=>{const token=localStorage.getItem('authToken');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});// Add response interceptor for error handling\napiClient.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('authToken');localStorage.removeItem('user');window.location.href='/login';}return Promise.reject(error);});export class DashboardAPI{// Admin Dashboard - matches your Laravel adminStats() method\nstatic async getAdminStats(){const response=await apiClient.get('/dashboard/admin');return response.data;}// Doctor Dashboard - matches your Laravel doctorStats() method  \nstatic async getDoctorStats(){const response=await apiClient.get('/dashboard/doctor');return response.data;}// Lab Tech Dashboard - matches your Laravel labStats() method\nstatic async getLabStats(){const response=await apiClient.get('/dashboard/lab');return response.data;}// Radiologist Dashboard - matches your Laravel radiologistStats() method\nstatic async getRadiologistStats(){const response=await apiClient.get('/dashboard/radiologist');return response.data;}// Owner Dashboard - matches your Laravel ownerStats() method\nstatic async getOwnerStats(){const response=await apiClient.get('/dashboard/owner');return response.data;}// System Health - matches your Laravel health() method\nstatic async getSystemHealth(){const response=await apiClient.get('/dashboard/health');return response.data;}// Legacy Stats - matches your Laravel stats() method\nstatic async getLegacyStats(){const response=await apiClient.get('/dashboard/stats');return response.data;}// Format currency helper\nstatic formatCurrency(amount){return formatCurrency(amount);}}// Authentication API\nexport class AuthAPI{static async login(credentials){const response=await apiClient.post('/auth/login',credentials);return response.data;}static async logout(){const response=await apiClient.post('/auth/logout');localStorage.removeItem('authToken');localStorage.removeItem('user');return response.data;}static async getCurrentUser(){const response=await apiClient.get('/auth/user');return response.data;}}// Utility function to format currency - updated for dollar amounts\nexport const formatCurrency=amount=>{return new Intl.NumberFormat('en-US',{style:'currency',currency:'USD'}).format(amount||0);};// Utility function to format dates\nexport const formatDate=dateString=>{return new Date(dateString).toLocaleDateString('en-US',{year:'numeric',month:'short',day:'numeric'});};export default apiClient;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","apiClient","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","DashboardAPI","getAdminStats","get","data","getDoctorStats","getLabStats","getRadiologistStats","getOwnerStats","getSystemHealth","getLegacyStats","formatCurrency","amount","AuthAPI","login","credentials","post","logout","getCurrentUser","Intl","NumberFormat","style","currency","format","formatDate","dateString","Date","toLocaleDateString","year","month","day"],"sources":["/Users/fahmadiqbal/FHIR-DICOM-With-Med-Gemma/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\n\n// Create axios instance with default config\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n  },\n});\n\n// Add request interceptor for auth token\napiClient.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor for error handling\napiClient.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport class DashboardAPI {\n  // Admin Dashboard - matches your Laravel adminStats() method\n  static async getAdminStats() {\n    const response = await apiClient.get('/dashboard/admin');\n    return response.data;\n  }\n\n  // Doctor Dashboard - matches your Laravel doctorStats() method  \n  static async getDoctorStats() {\n    const response = await apiClient.get('/dashboard/doctor');\n    return response.data;\n  }\n\n  // Lab Tech Dashboard - matches your Laravel labStats() method\n  static async getLabStats() {\n    const response = await apiClient.get('/dashboard/lab');\n    return response.data;\n  }\n\n  // Radiologist Dashboard - matches your Laravel radiologistStats() method\n  static async getRadiologistStats() {\n    const response = await apiClient.get('/dashboard/radiologist');\n    return response.data;\n  }\n\n  // Owner Dashboard - matches your Laravel ownerStats() method\n  static async getOwnerStats() {\n    const response = await apiClient.get('/dashboard/owner');\n    return response.data;\n  }\n\n  // System Health - matches your Laravel health() method\n  static async getSystemHealth() {\n    const response = await apiClient.get('/dashboard/health');\n    return response.data;\n  }\n\n  // Legacy Stats - matches your Laravel stats() method\n  static async getLegacyStats() {\n    const response = await apiClient.get('/dashboard/stats');\n    return response.data;\n  }\n\n  // Format currency helper\n  static formatCurrency(amount) {\n    return formatCurrency(amount);\n  }\n}\n\n// Authentication API\nexport class AuthAPI {\n  static async login(credentials) {\n    const response = await apiClient.post('/auth/login', credentials);\n    return response.data;\n  }\n\n  static async logout() {\n    const response = await apiClient.post('/auth/logout');\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('user');\n    return response.data;\n  }\n\n  static async getCurrentUser() {\n    const response = await apiClient.get('/auth/user');\n    return response.data;\n  }\n}\n\n// Utility function to format currency - updated for dollar amounts\nexport const formatCurrency = (amount) => {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n  }).format(amount || 0);\n};\n\n// Utility function to format dates\nexport const formatDate = (dateString) => {\n  return new Date(dateString).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n  });\n};\n\nexport default apiClient;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}